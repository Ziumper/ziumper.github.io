import Shuffle from"shufflejs";export class GridShuffle{constructor(e,t,s,i,r){this.itemSelectorClass=e,this.sizerSelectorClass=t,this.shuffleContainerId=s,this.itemInnerClassName=i,this.itemTransitionClassName=r,this.gridContainerElement=document.getElementById(this.shuffleContainerId),this.gridItems=this.gridContainerElement.querySelectorAll(this.itemSelectorClass),this.shuffleInstance=new Shuffle(this.gridContainerElement,{itemSelector:this.itemSelectorClass,sizer:this.sizerSelectorClass});let n=this.showItemsInViewport.bind(this);this.observer=new window.IntersectionObserver(n,{threshold:.5});for(var o=0;o<this.gridItems.length;o++)this.observer.observe(this.gridItems[o]);setTimeout(function(){}.bind(this),100)}addTransitionToItems(){for(var e=0;e<this.gridItems.length;e++){var t=this.gridItems[e].querySelector(this.itemInnerClassName);t?t.classList.add(this.itemTransitionClassName):console.error("Grid item inner element not defined")}}showItemsInViewport(e){e.forEach(function(e){e.isIntersecting&&e.target.classList.add("in")})}};export function filter(e,t){function s(e){return e[0]?e[0]:null}const i="active-separator-button";s(document.getElementsByClassName(i)).classList.remove(i),e.classList.add(i),window.gridShuffle.shuffleInstance.filter(t)};